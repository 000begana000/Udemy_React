//// important mistakes & thoughts 



🧠 useCallback — "Remember this function"
✅ Purpose: Memoize a function, so it doesn’t get recreated every render.

📍 Use it inside the render, when you’re defining a function that you want React to remember.
🧠 Think of it as:
“Only re-create this function if one of the dependencies changes.”



⚡ useEffect — "Do this side effect after rendering"
✅ Purpose: Run side effects like API calls, subscriptions, or manually changing the DOM.

📍 Use it after the component has rendered.
⚠️ don't forget to implement cleanup function when it's needed
🧠 Think of it as:
“Run this code after rendering — and re-run it if dependencies change.”



- how to shuffle an array 
// this logic comes after if state to prevent error
const shuffledAnswers = [...QUESTIONS[activeQuestionIndex].answers];
shuffledAnswers.sort(() => Math.random() - 0.5);



- no answer selected
// set the answer value as null
<QuestionTimer
    timeout={10000}
    onTimeout={() => {
        () => handleSelectAnswer(null);
    }}
/>



- key prop for component
key prop to tell React to destroy the current component instance, and insert a brand new one in its place.